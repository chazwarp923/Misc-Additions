buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.10-0.2"
group= "com.chazwarp.miscadditions" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "miscadditions"

minecraft {
    version = "1.7.10-10.13.4.1492-1.7.10"
    runDir = "../run"
    
   // srgExtra "com/cricketcraft/ctmlib com/chazwarp/ctmlib"
}

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    maven { url = "http://mobiusstrip.eu/maven" }
    maven { url = "http://chickenbones.net/maven/" }
    maven { url = "http://coloredlightscore.us.to/maven/chisel-2/" }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    //compile "appeng:appliedenergistics2:rv2-beta-32:dev"
    shade "com.cricketcraft.ctmlib:CTMLib:1.0.1.5"

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    //configurations.shade.each { dep ->
    //    from(project.zipTree(dep)){
    //        exclude 'META-INF', 'META-INF/**'
    //    }
    //}
}
